{"version":3,"sources":["pages/HomePage/HomePageStyles.js","components/SearchInput/SearchInputStyles.js","components/SearchInput/SearchInput.js","components/Card/CardStyles.js","components/Card/Card.js","pages/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["HomepageContainer","styled","div","UpperContainer","BottomContainer","GridContainer","SearchInputContainer","InputForm","input","SearchInput","props","type","placeholder","onChange","handleChange","role","aria-labelledby","length","CardContainer","TitleContainer","TitleContainer2","Card","data","item","headline","story","subheadline","href","url","target","rel","id","value","onClick","handleClick","HomePage","renderValues","arr","JSON","parse","localStorage","getItem","i","document","getElementById","click","event","setState","searchField","state","checked","e","prevState","favouriteIds","setItem","stringify","filter","this","json","items","array2","forEach","dat","toLowerCase","includes","push","key","displayCards","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f7d999c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nexport const HomepageContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n`\r\n\r\nexport const UpperContainer = styled.div`\r\n\theight: 10vh;\r\n\twidth: 100%;\r\n`\r\n\r\nexport const BottomContainer = styled.div`\r\n\theight: 90%;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n`\r\n\r\nexport const GridContainer = styled.div`\r\n\tmargin: 20px;\r\n\tdisplay: grid;\r\n\tgrid-gap: 3rem;\r\n\tgrid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n\tpadding-bottom: 30px;\r\n`\r\n","import styled from 'styled-components';\r\n\r\n\r\n\r\nexport const SearchInputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\talign-items: center;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\r\n\tspan {\r\n\t\tmargin-top: 1%;\r\n\t\tfont-weight: bold;\r\n\t}\r\n`\r\n\r\nexport const InputForm = styled.input`\r\n\tdisplay: flex;\r\n\tmargin-top: 1%;\r\n\theight: 35%;\r\n\twidth: 20%;\r\n\tborder: none;\r\n\tborder-bottom: 1px solid black;\r\n\tbackground: #9e9e9e66;\r\n\toutline: none;\r\n\r\n\t@media screen and (max-width: 500px) {\r\n\t    height: 40%;\r\n\t    width: 35%;\r\n\t}\r\n\r\n\t@media screen and (max-height: 500px) {\r\n\t\tmargin-top: 2%;\r\n\t    height: 70%;\r\n\t    width: 30%;\r\n\t}\r\n`\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport {SearchInputContainer, InputForm} from './SearchInputStyles.js';\r\n\r\n\r\n\r\nconst SearchInput = (props) => {\r\n\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<SearchInputContainer>\r\n\t\t\t<InputForm type='text' placeholder='Search' onChange={props.handleChange} />\r\n\t\t\t<span> Favourites <span role=\"img\" aria-labelledby=\"heart\">❤️</span><sup>{props.length}</sup> </span>\r\n\t\t</SearchInputContainer>\r\n\r\n\t\t)\r\n}\r\n\r\n\r\n\r\nexport default SearchInput;","import styled from 'styled-components';\r\n\r\n\r\nexport const CardContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tborder: 1px solid #9e9e9e66;\r\n\tbox-shadow: 5px 10px 5px #888888;\r\n\tpadding: 5%;\t\r\n`\r\n\r\nexport const UpperContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 90%;\r\n\twidth: 100%;\r\n`\r\n\r\nexport const BottomContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\theight: 10%;\r\n\twidth: 100%;\r\n\r\n\tinput[type=checkbox] {\r\n\t  height: 15px;\r\n\t  width: 15px;\r\n\t  position: relative;\r\n\t  background-color: #9e9e9e66;\r\n\t  outline: none;\r\n\t  cursor: pointer;\r\n\t  -webkit-appearance: none;\r\n\t  transform: rotate(45deg);\r\n\t}\r\n\r\n\tinput[type=checkbox]:before {\r\n\t  position: absolute;\r\n\t  background-color: #9e9e9e66;\r\n\t  content: \"\";\r\n\t  height: 60%;\r\n\t  width: 100%;\r\n\t  top: -59%;\r\n\t  border-radius: 75px 75px 0 0;\r\n\t}\r\n\r\n\tinput[type=checkbox]:after {\r\n\t  position: absolute;\r\n\t  background-color: #9e9e9e66;\r\n\t  content: \"\";\r\n\t  height: 60%;\r\n\t  width: 100%;\r\n\t  right: 79%;\r\n\t  top: 20%;\r\n\t  transform: rotate(-90deg);\r\n\t  border-radius: 75px 75px 0 0;\r\n\t}\r\n\r\n\tinput[type=checkbox]:checked,\r\n\t\tinput:checked[type=checkbox]:before,\r\n\t\tinput:checked[type=checkbox]:after {\r\n\t\t\tbackground-color: #fe0f42;\t\r\n\t}\r\n\r\n\tspan {\r\n\t\tfont-size: 0.9em;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\ta, a:hover, a:focus, a:active {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: inherit;\r\n\t}\r\n\r\n`\r\n\r\nexport const TitleContainer = styled.div`\r\n\tdisplay: flex;\r\n\theight: 40%;\r\n\twidth: 100%;\r\n\tpadding-bottom: 4%;\r\n\tborder-bottom: 1px solid #9e9e9e66;\r\n\r\n\tspan {\r\n\t\tfont-size: 1em;\r\n\t\tfont-weight: bold;\r\n\t}\r\n`\r\n\r\nexport const TitleContainer2 = styled.div`\r\n\tdisplay: flex;\r\n\theight: 60%;\r\n\twidth: 100%;\r\n\tmargin: 10px 0;\r\n\tspan {\r\n\t\tfont-size: 0.9em;\r\n\t}\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n\tdisplay: flex;\r\n\theight: 70%;\r\n\twidth: 100%;\r\n\r\n\timg {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t}\r\n`\r\n\r\n","import React from 'react';\r\n\r\nimport {CardContainer, UpperContainer, BottomContainer, TitleContainer, TitleContainer2} from './CardStyles.js';\r\n\r\nconst Card = (props) => {\r\n\r\n\treturn (\r\n\r\n\t\t<CardContainer>\r\n\t\t\t<UpperContainer>\r\n\t\t\t\t<TitleContainer>\r\n\t\t\t\t\t<span> {props.data.item.headline[0]} </span>\r\n\t\t\t\t</TitleContainer>\r\n\t\t\t\t<TitleContainer2>\r\n\t\t\t\t\t<span> {props.data.story.subheadline ? props.data.story.subheadline : null} </span>\r\n\t\t\t\t</TitleContainer2>\r\n\t\t\t</UpperContainer>\r\n\t\t\t<BottomContainer>\r\n\t\t\t\t<a href={props.data.story.url} target=\"_blank\" rel=\"noopener noreferrer\"><span> Read More... </span></a>\r\n\t\t\t\t<input id={props.data.id} type=\"checkbox\" value={props.data.id} onClick={props.handleClick}/>\r\n\t\t\t</BottomContainer>\r\n\t\t</CardContainer>\r\n\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\nexport default Card;\r\n\r\n// <ImageContainer>\r\n// \t\t\t\t<img src={`https://${props.data.story['hero-image-s3-key']}`} alt='img'/>\r\n// \t\t\t</ImageContainer>","import React from 'react';\r\n\r\nimport {HomepageContainer, UpperContainer, BottomContainer, GridContainer} from './HomePageStyles.js';\r\n\r\nimport SearchInput from '../../components/SearchInput/SearchInput.js';\r\nimport Card from '../../components/Card/Card.js';\r\nimport json from './reports.json'\r\n\r\nclass HomePage extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tdata: null,\r\n\t\t\tsearchField: '',\r\n\t\t\tfavouriteIds: [],\r\n\t\t\tlength: 0\r\n\t\t}\r\n\t}\r\n\r\n\trenderValues = () => {\r\n\t\tlet arr = JSON.parse(localStorage.getItem('arrays'))\r\n\t\tif(arr.length > 0) {\r\n\t\t\tfor(let i=0; i<arr.length; i++) {\r\n\t\t\t\tdocument.getElementById(arr[i]).click()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait this.setState({data: json.items})\r\n\t\tawait this.renderValues()\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({searchField: event.target.value}, () => {\r\n\t\t\tif(this.state.searchField === '') {\r\n\t\t\t\tlet arr = JSON.parse(localStorage.getItem('arrays'))\r\n\t\t\t\tif(arr.length > 0) {\r\n\t\t\t\t\tfor(let i=0; i<arr.length; i++) {\r\n\t\t\t\t\t\tif(document.getElementById(arr[i]).checked === false) {\r\n\t\t\t\t\t\t\tdocument.getElementById(arr[i]).checked = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\thandleClick = (e) => {\r\n\t\tif(e.target.checked === true) {\r\n\r\n\t\t\tthis.setState((prevState) => ({ favouriteIds: [...this.state.favouriteIds, e.target.value], length: prevState.length + 1 }),\r\n\t\t\t() => {\r\n\t\t\t\tlocalStorage.setItem('arrays', JSON.stringify(this.state.favouriteIds))\r\n\t\t\t\tlocalStorage.setItem('length', JSON.stringify(this.state.length))\r\n\t\t\t})\r\n\t\t\t\r\n\r\n\t\t} else if(e.target.checked === false) {\r\n\r\n\t\t\tlet arr = this.state.favouriteIds.filter((id) => {\r\n\t\t\t\treturn id !== e.target.value\r\n\t\t\t})\r\n\t\t\tthis.setState((prevState) => ({ favouriteIds: arr, length: prevState.length - 1 }), () => {\r\n\t\t\t\tlocalStorage.setItem('arrays', JSON.stringify(arr))\r\n\t\t\t\tlocalStorage.setItem('length', JSON.stringify(this.state.length))\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdisplayCards() {\r\n\r\n\t\tconst array2 = []\r\n\r\n\t\tif(this.state.data){\r\n\r\n\t\t\tconst {data, searchField} = this.state;\r\n\r\n\t\t\tdata.forEach((dat, i) => {\r\n\t\t\t\tif(dat.item.headline[0].toLowerCase().includes(searchField.toLowerCase())) {\r\n\t\t\t\t\tarray2.push(<Card key={i} data={dat} handleClick={this.handleClick}/>)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn array2\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<HomepageContainer>\r\n\t\t\t\t<UpperContainer>\r\n\t\t\t\t\t<SearchInput handleChange={this.handleChange} length={this.state.length}/>\r\n\t\t\t\t</UpperContainer>\r\n\t\t\t\t<BottomContainer>\r\n\t\t\t\t\t<GridContainer>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.displayCards()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</GridContainer>\r\n\t\t\t\t</BottomContainer>\r\n\t\t\t</HomepageContainer>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default HomePage;","import React from 'react';\nimport './App.css';\n\nimport HomePage from './pages/HomePage/HomePage.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}